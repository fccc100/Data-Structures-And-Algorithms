// 剑指 Offer 13. 机器人的运动范围
// 地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。
// 一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。
// 例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？

// 示例 1：

// 输入：m = 2, n = 3, k = 1
// 输出：3
// [
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
// ]

0---0
0---1
0---2
0---3
0---4
0---5
0---6
0---7
1---0
1---1
1---2
1---3
1---4
1---5
1---6
1---7
2---0
2---1
2---2
2---3
2---4
2---5
2---6
2---7
3---0
3---1
3---2
3---3
3---4
3---5
3---6
3---7
4---0
4---1
4---2
4---3
4---4
4---5
4---6
4---7
5---0
5---1
5---2
5---3
5---4
5---5
5---6
5---7
6---0
6---1
6---2
6---3
6---4
6---5
6---6
6---7
7---0
7---1
7---2
7---3
7---4
7---5
7---6
7---7
8---0
8---1
8---2
8---3
8---4
8---5
8---6
8---7
9---0
9---1
9---2
9---3
9---4
9---5
9---6
9---7
1---0
1---1
1---2
1---3
1---4
1---5
1---6
1---7
2---0
2---1
2---2
2---3
2---4
2---5
2---6
2---7
3---0
3---1
3---2
3---3
... 29 more lines

// 示例 2：
// 输入：m = 3, n = 1, k = 0
// 输出：1

/**
 * @param {number} m
 * @param {number} n
 * @param {number} k
 * @return {number}
 */
var movingCount = function(m, n, k) {
  // let res = 0;
  // for (let i = 0; i < m; i++) {
  //   let exist = false
  //   for (let j = 0; j < n; j++) {
  //     let sum1 = 0;
  //     if (i < 100) {
  //       sum1 += Math.floor(i / 10);
  //       sum1 += (i % 10);
  //     } else {
  //       sum1 += Math.floor(i / 100);
  //       sum1 += Math.floor((i % 100) / 10);
  //       sum1 += (i % 100 % 10);
  //     }

  //     let sum2 = 0;
  //     if (j < 100) {
  //       sum2 += Math.floor(j / 10);
  //       sum2 += (j % 10);
  //     } else {
  //       sum2 += Math.floor(j / 100);
  //       sum2 += Math.floor((j % 100) / 10);
  //       sum2 += (j % 100 % 10);
  //     }
  //     if (sum1 + sum2 <= k) {
  //       exist = true;
  //       res++;
  //     }
  //   }
  //   if (!exist) break;
  // }
  // return res;
};

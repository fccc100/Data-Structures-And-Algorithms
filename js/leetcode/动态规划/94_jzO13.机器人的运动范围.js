// 剑指 Offer 13. 机器人的运动范围
// 地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。
// 一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。
// 例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？

// 示例 1：

// 输入：m = 2, n = 3, k = 1
// 输出：3
// [
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
//   0, 0, 0, 0, 0, 0, 0, 0
// ]

// 示例 2：
// 输入：m = 3, n = 1, k = 0
// 输出：1

/**
 * @param {number} m
 * @param {number} n
 * @param {number} k
 * @return {number}
 */
var movingCount = function(m, n, k) {
  // let res = 0;
  // for (let i = 0; i < m; i++) {
  //   let exist = false
  //   for (let j = 0; j < n; j++) {
  //     let sum1 = 0;
  //     if (i < 100) {
  //       sum1 += Math.floor(i / 10);
  //       sum1 += (i % 10);
  //     } else {
  //       sum1 += Math.floor(i / 100);
  //       sum1 += Math.floor((i % 100) / 10);
  //       sum1 += (i % 100 % 10);
  //     }

  //     let sum2 = 0;
  //     if (j < 100) {
  //       sum2 += Math.floor(j / 10);
  //       sum2 += (j % 10);
  //     } else {
  //       sum2 += Math.floor(j / 100);
  //       sum2 += Math.floor((j % 100) / 10);
  //       sum2 += (j % 100 % 10);
  //     }
  //     if (sum1 + sum2 <= k) {
  //       exist = true;
  //       res++;
  //     }
  //   }
  //   if (!exist) break;
  // }
  // return res;
};

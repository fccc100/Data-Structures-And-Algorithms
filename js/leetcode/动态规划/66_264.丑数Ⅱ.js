// 264. 丑数 II
// 给你一个整数 n ，请你找出并返回第 n 个 丑数 。

// 丑数 就是只包含质因数 2、3 和/或 5 的正整数。

// 示例 1：
// 输入：n = 10
// 输出：12
// 解释：[1, 2, 3, 4, 5, 6, 8, 9, 10, 12] 是由前 10 个丑数组成的序列。

// 动态规划
function nthUglyNumber(n) {
  let dp = Array(n + 1)
  dp[1] = 1;
  let p2 = 1;
  let p3 = 1;
  let p5 = 1;

  // 丑数里的数必定是其前面的数 *2 或*3 或*5而来的，定义三个指针指向第一个数，每次取三个指针分别*2 *3 *5的最小值
  // 当取到该值时，对应指针 + 1
  for (let i = 2; i <= n; i++) {
    dp[i] = Math.min(2 * dp[p2], Math.min(3 * dp[p3], 5 * dp[p5]));
    if (dp[i] == 2 * dp[p2]) {
      p2 ++;
    }
    if (dp[i] == 3 * dp[p3]) {
      p3 ++;
    }
    if (dp[i] == 5 * dp[p5]) {
      p5 ++;
    }
  }

  return dp[n];
}